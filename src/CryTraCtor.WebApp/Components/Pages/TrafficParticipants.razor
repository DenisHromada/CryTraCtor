@page "/files/{fileId:guid}/file-analysis/{fileAnalysisId:guid}/traffic-participants"

@using CryTraCtor.Business.Facades.Interfaces
@using CryTraCtor.Business.Models.TrafficParticipants
@using CryTraCtor.WebApp.Services

@inject ITrafficParticipantFacade TrafficParticipantFacade
@inject ISnackbar Snackbar
@inject IBreadcrumbService BreadcrumbService

<h3>Traffic Participants</h3>

<MudDataGrid Items="@_trafficParticipants" Hover="true"
             T="TrafficParticipantListModel">
    <Columns>
        <PropertyColumn Property="x => x.Address" Title="Address"/>
        <PropertyColumn Property="x => x.Port" Title="Port"/>
        <PropertyColumn Property="x => x.OutgoingDnsCount" Title="Outgoing DNS"/>
        <PropertyColumn Property="x => x.IncomingDnsCount" Title="Incoming DNS"/>
        <PropertyColumn Property="x => x.UniqueMatchedKnownDomainCount"
                        Title="Unique Matched Domains"/>
        <PropertyColumn Property="x => x.TotalMatchedKnownDomainCount"
                        Title="Total Matched Domains"/>
        <PropertyColumn Property="x => x.OutgoingBitcoinCount" Title="Outgoing Bitcoin"/>
        <PropertyColumn Property="x => x.IncomingBitcoinCount" Title="Incoming Bitcoin"/>
        <TemplateColumn Title="Actions">
            <CellTemplate>
                <MudTooltip Text="View DNS Overview">
                    <MudIconButton Icon="@Icons.Material.Filled.Dns" Size="Size.Small" Color="Color.Primary"
                                   Href="@($"/files/{FileId}/file-analysis/{FileAnalysisId}/traffic-participants/{context.Item.Id}/dns")"/>
                </MudTooltip>
                <MudTooltip Text="View Known Domains Summary">
                    <MudIconButton Icon="@Icons.Material.Filled.ListAlt" Size="Size.Small" Color="Color.Primary"
                                   Href="@($"/files/{FileId}/file-analysis/{FileAnalysisId}/traffic-participants/{context.Item.Id}/known-domains")"/>
                </MudTooltip>
                <MudTooltip Text="View Bitcoin Overview">
                    <MudIconButton Icon="@Icons.Material.Filled.NetworkWifi" Size="Size.Small" Color="Color.Primary"
                                   Href="@($"/files/{FileId}/file-analysis/{FileAnalysisId}/traffic-participants/{context.Item.Id}/bitcoin")"/>
                </MudTooltip>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    [Parameter] public Guid FileId { get; set; }
    [Parameter] public Guid FileAnalysisId { get; set; }
    private List<TrafficParticipantListModel> _trafficParticipants = [];

    protected override async Task OnInitializedAsync()
    {
        var breadcrumbs = new List<BreadcrumbItem>
        {
            new BreadcrumbItem("Files", href: "/files"),
            new BreadcrumbItem("File Analysis", href: $"/files/{FileId}/file-analysis"),
            new BreadcrumbItem("Traffic Participants", href: null, disabled: true)
        };
        BreadcrumbService.SetBreadcrumbs(breadcrumbs);

        if (RendererInfo.IsInteractive)
        {
            await LoadTrafficParticipantsAsync();
        }
    }

    private async Task LoadTrafficParticipantsAsync()
    {
        try
        {
            _trafficParticipants = (await TrafficParticipantFacade.GetByFileAnalysisIdAsync(FileAnalysisId)).ToList();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading traffic participants: {ex.Message}", Severity.Error);
            _trafficParticipants = new();
        }
    }

}
